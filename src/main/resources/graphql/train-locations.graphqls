type TrainEvent {
    eventId: ID!,
    trainId: Int!,
    currentStation: String!,
    time: String,
    nextStation: String
}

type Query {
    getAllTrainEvents : [TrainEvent]!
}

type Mutation {
    addTrainEvent (trainId: String!, currentStation: String!, time: String, nextStation: String!) : TrainEvent
}

type Subscription {
    trainReaching (nextStation: String) : TrainEvent!
}

#subscription {
#    trainReaching (nextStation: "Cardiff") {
#        trainId
#        eventId
#        currentStation
#        nextStation
#        time
#    }
#}

# for testing

#type Subscription {
#    trainReaching (stationId : ID!) : TrainEvent!
#}

#type Subscription {
#    trainReaching : TrainEvent!
#}

#type Mutation {
#    addTrainEvent (trainEvent: TrainEventInput) : TrainEvent
#}

#type Station {
#    id: ID!,
#    locationDistanceIndex: Int!
#    name: String!
#}